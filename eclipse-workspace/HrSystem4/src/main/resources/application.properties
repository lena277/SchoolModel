spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER_NAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect



#Google Calendar API Configuration
google.client.client-id=686045931865-00dtsj5ceoelf7pi7f1f4verdfrgd6o7.apps.googleusercontent.com
google.client.client-secret=zUHVCQr9TAky8JhpZ5Bwg83t
google.client.access-token-uri=https://www.googleapis.com/oauth2/v3/token
google.client.user-authorization-uri=https://accounts.google.com/o/oauth2/auth?access_type=offline&prompt=consent
google.client.client-authentication-scheme=query
google.client.scope=profile,email,https://www.googleapis.com/auth/calendar
google.resource.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
google.resource.prefer-token-info=true
google.client.redirectUri=http://localhost:9000/login/google

#Gmail API Configuration
gmail.client.clientId=870389196490-6hsc8tros0k0fvsb5rfm0esko1tlef08.apps.googleusercontent.com
gmail.client.clientSecret=djAf6prM1ui0XROsN5FL0xA2
gmail.client.accessTokenUri=https://accounts.google.com/o/oauth2/token
gmail.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/auth
gmail.client.clientAuthenticationScheme=query
gmail.client.scope=https://mail.google.com/,https://www.googleapis.com/auth/gmail.metadata,https://www.googleapis.com/auth/gmail.modify,https://www.googleapis.com/auth/gmail.readonly
gmail.resource.userInfoUri=https://www.googleapis.com/gmail/v1/users/me/profile
gmail.resource.preferTokenInfo=true
gmail.client.redirectUri=http://localhost:9000/login/gmailCallback

oauth2.clientId=1016921926680-vd07kma4a9am2qdg07rmr8b4ju3a3nmk.apps.googleusercontent.com
oauth2.clientSecret=gY-p1OshijWHTCoBU1pxmaBz
#
# Comma-separated scopes
# Refer to https://developers.google.com/identity/protocols/googlescopes
oauth2.scope=https://www.googleapis.com/auth/userinfo.email,https://www.googleapis.com/auth/userinfo.profile
#
# E.g. "https://accounts.google.com/o/oauth2/v2/auth"
oauth2.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
#
# E.g. "https://www.googleapis.com/oauth2/v4/token"
oauth2.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
#
# Usually "authorization_code"
oauth2.tokenName=authorization_code
#
# Defaults to current URI
# If using a pre-established redirect URI (it must be absolute, not relative)
#oauth2.redirectUrl=http://localhost:8080/.../oauth2/callback
#
# Path used by authentication processing filter and authentication entry point
oauth2.filterCallbackPath=/oauth2/callback
#
security.basic.enabled=false

#mail properties
# E.g. "https://www.googleapis.com/oauth2/v3/userinfo"
oauth2.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo

# Email (MailProperties)
spring.mail.properties.mail.smtp.host=smtp.gmail.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.debug= true
spring.mail.properties.mail.smtp.port=465
spring.mail.properties.mail.smtp.socketFactory.port= 465
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=*
spring.mail.properties.mail.transport.protocol=smtp
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory








spring.mail.host=smtp.gmail.com
spring.mail.password=;as41996*/;
spring.mail.protocol=smtp
spring.mail.test-connection=false
spring.mail.username=lenaasfour277@gmail.com
spring.mail.properties.mail.smtps.quitwait=false



		props.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
